-- DDL : 데이터 정의 언어
-- 객체를 만들고 수정하고 삭제하는 구문

-- CREATE : 객체를 생성하는 구문

-- 테이블 만들기
CREATE TABLE MEMBER(
--          테이블이름
    MEMBER_ID VARCHAR2(20),
    MEMBER_PWD VARCHAR2(20),
    MEMBER_NAME VARCHAR2(20)
);

SELECT * FROM MEMBER;

-- 컬럼에 주석달기
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원 아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '회원 비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원 이름';

SELECT * FROM USER_TABLES;
-- USER_TABLE : 사용자가 작성한 테이블을 확인하는 뷰

SELECT *
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'MEMBER';
-- USER_TAB_COLUMNS : 테이블, 뷰의 컬럼과 관련된 정보 조회

DESC MEMBER;
--DESC : 테이블 구조 표시

-- 제약조건
-- 제약 조건은 테이블을 처음 만들 때 지정해도 되고 테이블을 만들고 나서 나중에 지정해줘도 됨
SELECT * FROM USER_CONSTRAINTS; -- 사용자가 작성한 제약조건을 확인하는 뷰
SELECT * FROM USER_CONS_COLUMNS; -- 제약조건이 걸려 있는 컬럼을 확인하는 뷰

-- NOT NULL : 해당 컬럼에 값이 반드시 기록되어야하는 경우 사용
-- 컬럼레벨에서 제한
CREATE TABLE USER_NOCONST(
    USER_NO NUMBER, 
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(20),
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_NOCONST
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_NOCONST
VALUES(NULL, NULL, NULL, NULL, NULL, '010-2222-3333', 'kang123@kh.or.kr');

SELECT * FROM USER_NOCONST;

CREATE TABLE USER_NOTNULL(
    USER_NO NUMBER NOT NULL, -- 컬럼레벨에서 제약조건 설정
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30) NOT NULL,
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_NOTNULL
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_NOTNULL
VALUES(NULL, NULL, NULL, NULL, NULL, '010-2222-3333', 'kang123@kh.or.kr');
-- 오류 보고 - ORA-01400: cannot insert NULL into ("KH"."USER_NOTNULL"."USER_NO")


-- UNIQUE
-- 컬럼레벨, 테이블 레벨 설정 가능
SELECT * FROM USER_NOCONST;

INSERT INTO USER_NOCONST
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

CREATE TABLE USER_UNIQUE(
    USER_NO NUMBER, 
    USER_ID VARCHAR2(20) UNIQUE, -- 컬럼레벨에서 제약조건 설정
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_UNIQUE
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');
-- 오류 보고 - ORA-00001: unique constraint (KH.SYS_C007038) violated
-- USER_ID에 UNIQUE 제약조건 넣음 : 중복 값 허용 안 함

SELECT * FROM USER_UNIQUE;

CREATE TABLE USER_UNIQUE2(
    USER_NO NUMBER, 
    USER_ID VARCHAR2(20) NOT NULL, -- 컬럼레벨에서 제약조건 설정
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    UNIQUE(USER_ID) -- 테이블 레벨에서 제약조건 설정
);

INSERT INTO USER_UNIQUE2
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_UNIQUE2
VALUES(1, NULL, 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');
-- ORA-01400: cannot insert NULL into ("KH"."USER_UNIQUE2"."USER_ID")
-- USER ID에 제약조건 -> NULL을 넣으면 안 됨

CREATE TABLE USER_UNIQUE3(
    USER_NO NUMBER, 
    USER_ID VARCHAR2(20), 
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    UNIQUE(USER_NO, USER_ID)
);

INSERT INTO USER_UNIQUE3
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_UNIQUE3
VALUES(2, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_UNIQUE3
VALUES(2, 'user02', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_UNIQUE3
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');
-- 오류 보고 - ORA-00001: unique constraint (KH.SYS_C007043) violated
-- UNIQUE(USER_NO, USER_ID) => USER_NO와 USER_ID를 하나로 보고 비교하는 것임. 그래서 user01이 중복 되어도
-- user number가 중복되어도 쌍으로 중복된 것이 아니기 때문에 오류가 나지 않는다.

CREATE TABLE CONS_NAME(
    TEST_DATA1 VARCHAR2(20) CONSTRAINT NN_CN_TD1 NOT NULL,
    TEST_DATA2 VARCHAR2(20) CONSTRAINT UQ_CN_TD2 UNIQUE,
    TEST_DATA3 VARCHAR2(20),
    CONSTRAINT UK_CN_TD3 UNIQUE(TEST_DATA3)
);

INSERT INTO CONS_NAME
VALUES('TEST1', 'TEST2', 'TEST3');

-- PRIMARY KEY : NOT NULL + UNIQUE
-- 한 테이블 당 하나만 설정 가능
-- 컬럼 레벨, 테이블 레벨 설정 가능

CREATE TABLE USER_PRIMARYKEY(
    USER_NO NUMBER CONSTRAINT PK_UP_UNO PRIMARY KEY, -- 컬럼 레벨
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_PRIMARYKEY
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_PRIMARYKEY
VALUES(1, 'user02', 'pass02', '남나눔', '남', '010-2222-3333', 'nam123@kh.or.kr');
-- ORA-00001: unique constraint (KH.PK_UP_UNO) violated
-- USER_NO에 PRIMARY KEY 제약 설정 : NOT NULL + UNIQUE
-- 기본키 중복으로 오류

INSERT INTO USER_PRIMARYKEY
VALUES(NULL, 'user03', 'pass03', '도대담', '남', '010-3333-4444', 'do123@kh.or.kr');
-- ORA-01400: cannot insert NULL into ("KH"."USER_PRIMARYKEY"."USER_NO")
-- 기본키에 NULL이 들어갔으므로 오류

CREATE TABLE USER_PRIMARYKEY2(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    CONSTRAINT PK_UP2_UNO_UID PRIMARY KEY(USER_NO, USER_ID) -- 복합키로 테이블레벨에 설정
);

SELECT * FROM USER_PRIMARYKEY2;

INSERT INTO USER_PRIMARYKEY2
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_PRIMARYKEY2
VALUES(1, 'user02', 'pass02', '남나눔', '남', '010-2222-3333', 'nam123@kh.or.kr');

INSERT INTO USER_PRIMARYKEY2
VALUES(2, 'user01', 'pass01', '도대담', '남', '010-3333-4444', 'do123@kh.or.kr');

INSERT INTO USER_PRIMARYKEY2
VALUES(1, 'user01', 'pass01', '류라라', '여', '010-4444-5555', 'ryu123@kh.or.kr');
-- 오류 보고 - ORA-00001: unique constraint (KH.PK_UP2_UNO_UID) violated
-- 기본키 중복으로 오류

INSERT INTO USER_PRIMARYKEY2
VALUES(NULL, 'user01', 'pass01', '류라라', '여', '010-4444-5555', 'ryu123@kh.or.kr');
-- 오류 보고 - ORA-01400: cannot insert NULL into ("KH"."USER_PRIMARYKEY2"."USER_NO")
-- 기본키에 NULL이 들어갔으므로 오류

-- FOREIGN KEY
-- 참조된 다른 테이블이 제공하는 값만 사용 가능
-- FOREIGN KEY제약조건에 의해 테이블간의 관계 형성
-- 제공 되는 값 외에는 NULL 이용 가능
-- 테이블 레벨, 컬럼 레벨 설정 가능

CREATE TABLE USER_GRADE(
GRADE_CODE NUMBER PRIMARY KEY,
GRADE_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO USER_GRADE VALUES(10, '일반회원');
INSERT INTO USER_GRADE VALUES(20, '우수회원');
INSERT INTO USER_GRADE VALUES(30, '특별회원');

SELECT * FROM USER_GRADE;

CREATE TABLE USER_FOREIGNKEY(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    GRADE_CODE NUMBER,
    CONSTRAINT FK_UF_GC FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE(GRADE_CODE) -- 어디에 있는 것을 참조해오겠다
);

INSERT INTO USER_FOREIGNKEY
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr', 10);

INSERT INTO USER_FOREIGNKEY
VALUES(2, 'user02', 'pass02', '남나눔', '남', '010-2222-3333', 'nam123@kh.or.kr', 10);

INSERT INTO USER_FOREIGNKEY
VALUES(3, 'user03', 'pass03', '도대담', '남', '010-3333-4444', 'do123@kh.or.kr', 30);

INSERT INTO USER_FOREIGNKEY
VALUES(4, 'user04', 'pass04', '류라라', '여', '010-4444-5555', 'ryu123@kh.or.kr', NULL);

SELECT * FROM USER_FOREIGNKEY;

INSERT INTO USER_FOREIGNKEY
VALUES(5, 'user05', 'pass05', '문미미', '여', '010-5555-6666', 'moon123@kh.or.kr', 50);
-- 오류 보고 - ORA-02291: integrity constraint (KH.FK_UF_GC) violated - parent key not found
-- USER GRADE에 50이라는 값이 없으므로 오류가 난다!!
-- GRADE_NAME VARCHAR2(30) NOT NULL로 설정해놨음

COMMIT;

DELETE FROM USER_GRADE
WHERE GRADE_CODE = 10;
-- 오류 보고 - ORA-02292: integrity constraint (KH.FK_UF_GC) violated - child record found
-- 나를 참조하고 있는 아이들이 있다, 그래서 지울 수 없다

DELETE FROM USER_GRADE
WHERE GRADE_CODE = 20;
-- 20을 참조하고 있는 게 없기 때문에 삭제 가능

ROLLBACK; 
-- DELETE 한 거 되돌리기

CREATE TABLE USER_GRADE2(
GRADE_CODE NUMBER PRIMARY KEY,
GRADE_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO USER_GRADE2 VALUES(10, '일반회원');
INSERT INTO USER_GRADE2 VALUES(20, '우수회원');
INSERT INTO USER_GRADE2 VALUES(30, '특별회원');


CREATE TABLE USER_FOREIGNKEY2(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    GRADE_CODE NUMBER,
    CONSTRAINT FK_UF_GC2 FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE2(GRADE_CODE) ON DELETE SET NULL
    -- ON DELETE SET NULL : 부모 키 삭제 시 자식 키를 NULL로 변경하는 삭제 옵션
);
-- name already used by an existing constraint
-- 테이블 이름이 다르더라도 제약 조건명이 같으면 안 된다
-- CONSTRAINT이름 변경하고 REFERENCES를 USER_GRADE2로


INSERT INTO USER_FOREIGNKEY2
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr', 10);

INSERT INTO USER_FOREIGNKEY2
VALUES(2, 'user02', 'pass02', '남나눔', '남', '010-2222-3333', 'nam123@kh.or.kr', 10);

INSERT INTO USER_FOREIGNKEY2
VALUES(3, 'user03', 'pass03', '도대담', '남', '010-3333-4444', 'do123@kh.or.kr', 30);

INSERT INTO USER_FOREIGNKEY2
VALUES(4, 'user04', 'pass04', '류라라', '여', '010-4444-5555', 'ryu123@kh.or.kr', NULL);

SELECT * FROM USER_FOREIGNKEY2;

INSERT INTO USER_FOREIGNKEY2
VALUES(5, 'user05', 'pass05', '문미미', '여', '010-5555-6666', 'moon123@kh.or.kr', 50);
-- 오류 보고 - ORA-02291: integrity constraint (KH.FK_UF_GC2) violated - parent key not found

COMMIT;

DELETE FROM USER_GRADE2
WHERE GRADE_CODE = 10;

-----------------------------


CREATE TABLE USER_GRADE3(
GRADE_CODE NUMBER PRIMARY KEY,
GRADE_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO USER_GRADE3 VALUES(10, '일반회원');
INSERT INTO USER_GRADE3 VALUES(20, '우수회원');
INSERT INTO USER_GRADE3 VALUES(30, '특별회원');


CREATE TABLE USER_FOREIGNKEY3(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    GRADE_CODE NUMBER,
    CONSTRAINT FK_UF_GC3 FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE3(GRADE_CODE) ON DELETE CASCADE
    -- ON DELETE CASCADE : 부모 키 삭제 시 자식 키도 함께 삭제하는 삭제 옵션
);

INSERT INTO USER_FOREIGNKEY3
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr', 10);

INSERT INTO USER_FOREIGNKEY3
VALUES(2, 'user02', 'pass02', '남나눔', '남', '010-2222-3333', 'nam123@kh.or.kr', 10);

INSERT INTO USER_FOREIGNKEY3
VALUES(3, 'user03', 'pass03', '도대담', '남', '010-3333-4444', 'do123@kh.or.kr', 30);

INSERT INTO USER_FOREIGNKEY3
VALUES(4, 'user04', 'pass04', '류라라', '여', '010-4444-5555', 'ryu123@kh.or.kr', NULL);

SELECT * FROM USER_FOREIGNKEY3;

INSERT INTO USER_FOREIGNKEY3
VALUES(5, 'user05', 'pass05', '문미미', '여', '010-5555-6666', 'moon123@kh.or.kr', 50);

COMMIT;

DELETE FROM USER_GRADE3
WHERE GRADE_CODE = 10;
-- 아예 1, 2번이 삭제됨(확인은 USER_FOREIGNKEY3의 데이터에서)

-- CHECK
-- 변하는 값이나 함수 사용 못 함
CREATE TABLE USER_CHECK(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10) CHECK(GENDER IN('남', '여')),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_CHECK
VALUES(1, 'user01', 'pass01', '강건강', '남', '010-1111-2222', 'kang123@kh.or.kr');

INSERT INTO USER_CHECK
VALUES(2, 'user02', 'pass02', '남나눔', '남자', '010-2222-3333', 'nam123@kh.or.kr');
-- 오류 보고 - ORA-02290: check constraint (KH.SYS_C007074) violated
-- CHECK(GENDER IN('남', '여')) : '남'이나 '여'로 써야 하는데 '남자'로 써서 오류가 남

CREATE TABLE USER_CHECK2(
    TEST_NUMBER NUMBER,
    CONSTRAINT CK_TEST_NUMBER CHECK(TEST_NUMBER > 0)
);

INSERT INTO USER_CHECK2 VALUES(10);
INSERT INTO USER_CHECK2 VALUES(-10);
-- 오류 보고 - ORA-02290: check constraint (KH.CK_TEST_NUMBER) violated
-- (TEST_NUMBER > 0)

CREATE TABLE USER_CHECK3(
    C_NAME VARCHAR2(15 CHAR),
    C_PRICE NUMBER,
    C_LEVEL CHAR(1),
    C_DATE DATE,
    CONSTRAINT PK_UC3_NAME PRIMARY KEY(C_NAME),
--    CONSTRAINT CK_UC3_PRICE CHECK(C_PRICE >= 1 AND C_PRICE <= 99999),
    CONSTRAINT CK_UC3_PRICE CHECK(C_PRICE BETWEEN 1 AND 99999),
    CONSTRAINT CK_UC3_LEVEL CHECK(C_LEVEL = 'A' OR C_LEVEL = 'B' OR C_LEVEL = 'C'),
    CONSTRAINT CK_UC3_DATE CHECK(C_DATE >= TO_DATE('2020/01/01', 'YYYY/MM/DD'))
);

-- 실습문제
-- 회원 가입용 테이블 생성 : USER_TEST
-- 컬럼명
-- USER_NO(회원 번호):NUMBER - 기본키 : PK_UT_USERNO
-- USER_ID(회원 아이디):VARCHAR2(20) - 중복금지 : UQ_UT_USERID
-- USER_PWD(회원 비밀번호):VARCHAR2(20) - NULL값 허용 안함(NN_UT_USERPWD)
-- PNO(주민등록번호):VARCHAR2(20) - 중복금지(UQ_UT_PNO), NULL값 허용 안함(NN_UT_PNO)
-- GERDER(성별):VARCHAR2(3) - '남' 혹은 '여'로 입력(CK_UT_GENDER)
-- PHONE(연락처):VARCHAR2(20)
-- ADDRESS(주소):VARCHAR2(100)
-- STATUS(탈퇴여부):VARCHAR2(3) - NULL값 허용 안함(NN_UT_STATUS), 'Y' 또는 'N'으로 입력(CK_UT_STATUS)
-- 각 컬럼의 제약조건에 이름 부여할 것
-- 5명 이상 INSERT할 것

CREATE TABLE USER_TEST(
    USER_NO NUMBER CONSTRAINT PK_UT_USERNO PRIMARY KEY,
    USER_ID VARCHAR2(20) CONSTRAINT UQ_UT_USERID UNIQUE,
    USER_PWD VARCHAR2(20) CONSTRAINT NN_UT_USERPWD NOT NULL,
    PNO VARCHAR2(20) CONSTRAINT UQ_UT_PNO NOT NULL,
    GENDER VARCHAR2(3) CONSTRAINT CK_UT_GENDER CHECK(GENDER IN('남', '여')),
    PHONE VARCHAR2(20),
    ADDRESS VARCHAR2(100),
    STATUS VARCHAR2(3) CONSTRAINT NN_UT_STATUS NOT NULL,
    CONSTRAINT UQ_UT_PNO UNIQUE(PNO),
    CONSTRAINT CK_UT_STATUS CHECK(STATUS IN('Y', 'N'))
); 

COMMENT ON COLUMN USET_TEST.USER_NO IS '회원번호';
COMMENT ON COLUMN USET_TEST.USER_ID IS '회원아이디';
COMMENT ON COLUMN USET_TEST.USER_PWD IS '비밀번호';
COMMENT ON COLUMN USET_TEST.PNO IS '주민등록번호';
COMMENT ON COLUMN USET_TEST.GENDER IS '성별';
COMMENT ON COLUMN USET_TEST.PHONE IS '연락처';
COMMENT ON COLUMN USET_TEST.ADDRESS IS '주소';
COMMENT ON COLUMN USET_TEST.STATUS IS '탈퇴여부';


INSERT INTO USER_TEST
VALUES(1, 'user01', 'pass01', '941026-1452698', '남', '010-1111-2222', '서울시 송파구 잠실동', 'Y');

INSERT INTO USER_TEST
VALUES(2, 'user02', 'pass02', '780804-2356348', '여', '010-2222-3333', '경기도 고양시 일산동구', 'N');

INSERT INTO USER_TEST
VALUES(3, 'user04', 'pass03', '980628-2256451', '여', '010-4444-5555', '인천시 연수구 송도동', 'N');

INSERT INTO USER_TEST
VALUES(4, 'user03', 'pass05', '001118-1245621', '남', '010-3333-4444', '서울시 용산구 한남동', 'N');

INSERT INTO USER_TEST
VALUES(5, 'user05', 'pass01', '890309-2101854', '여', '010-5555-6666', '경기도 성남시 분당구', 'N');

DELETE FROM USER_TEST
WHERE USER_ID = 'user05';

SELECT * FROM USER_TEST;

COMMIT;

-- SUBQUERY를 이용한 테이블 생성
CREATE TABLE EMPLOYEE_COPY
AS SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE_COPY;

CREATE TABLE EMPLOYEE_COPY2
AS SELECT EMP_ID, EMP_NAME, SALARY, DEPT_TITLE, JOB_NAME
   FROM EMPLOYEE
        LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
        JOIN JOB USING(JOB_CODE);

SELECT * FROM EMPLOYEE_COPY2;

CREATE TABLE USER_GRADE4(
    GRADE_CODE NUMBER,
    GRADE_NAME VARCHAR2(30)
);

-- 테이블 변경 : ALTER
-- ALTER TABLE 테이블명 ADD 제약조건종류(컬럼명) [REFERENCES 테이블명(컬럼명)];
-- ALTER TABLE 테이블명 MODIFY 컬럼명 NOT NULL;
ALTER TABLE USER_GRADE4 ADD PRIMARY KEY(GRADE_CODE);

CREATE TABLE USER_FOREIGNKEY4(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20), -- UNIQUE
    USER_PWD VARCHAR2(30) NOT NULL, -- NOT NULL
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10), -- CHECK
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    GRADE_CODE NUMBER -- FOREIGN KEY
);

ALTER TABLE USER_FOREIGNKEY4 ADD UNIQUE(USER_ID);
ALTER TABLE USER_FOREIGNKEY4 ADD CHECK(GENDER IN ('남', '여'));
ALTER TABLE USER_FOREIGNKEY4 ADD FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE4; -- USER_GRADE4 테이블의 기본키 참조
-- = ALTER TABLE USER_FOREIGNKEY4 ADD FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE4(GRADE_CODE);

-- DEPARTMENT테이블의 LOCATION_ID에 외래키 제약조건 추가
-- 참조 테이블은 LOCATION, 참조 컬럼은 LOCATION의 기본 키
ALTER TABLE DEPARTMENT ADD FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION;
