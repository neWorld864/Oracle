-- JOIN
-- 하나 이상의 테이블에서 데이터를 조회하기 위해 사용
-- 수행 결과는 하나의 RESULT SET으로 나옴
-- 무작정 데이터를 가져오는 게 아니라 테이블 간 연결고리로 테이블 연결 ==> JOIN

-- 사번, 사원 명, 부서코드, 부서명 조회
-- --E  ----E   -----E,D ---D
SELECT EMP_ID, EMP_NAME, DEPT_CODE
FROM EMPLOYEE;

SELECT DEPT_ID, DEPT_TITLE
FROM DEPARTMENT;

-- DEPT_CODE와 DEPT_ID로 연결

-- 오라클 전용 구문 : FROM절에 테이블을 ','로 구분하여 기술, WHERE절에 합치는데 사용할 컬럼명 명시
-- 사번, 사원 명, 부서코드, 부서 명
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID;
-- 부서코드가 NULL인 사람들은 빠짐

SELECT EMP_ID, EMP_NAME, DEPT_ID, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID;

-- 사번, 사원 명, 직급 코드, 직급 명
SELECT EMP_ID, EMP_NAME, EMPLOYEE.JOB_CODE, JOB_NAME
FROM EMPLOYEE, JOB
WHERE EMPLOYEE.JOB_CODE = JOB.JOB_CODE;

SELECT EMP_ID, EMP_NAME, JOB.JOB_CODE, JOB_NAME
FROM EMPLOYEE, JOB
WHERE EMPLOYEE.JOB_CODE = JOB.JOB_CODE;

SELECT EMP_ID, EMP_NAME, J.JOB_CODE, JOB_NAME
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE;
/*
    SELECT 에서도 E로 쓸 수 있는건 FROM부터 읽어서 그런건가요??
        ==> 네
*/



-- ANSI 표준 구문 : 컬럼 명이 다를 경우 ON() 사용
--                 컬럼 명이 같을 경우 USING() 사용
-- 사번, 사원 명, 부서코드, 부서 명 : 컬럼 명이 다를 경우
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);
-- 사번, 사원 명, 직급 코드, 직급 명 : 컬럼 명이 같을 경우
SELECT EMP_ID, EMP_NAME, JOB_CODE, JOB_NAME
FROM EMPLOYEE
     JOIN JOB USING (JOB_CODE);
     
     
     
-- 부서 명과 해당 부서의 지역 명 조회
-- 오라클
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT, LOCATION
WHERE LOCATION_ID = LOCAL_CODE;

-- ANSI
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT
     JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE);


SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID;

-- 외부 조인(OUTER JOIN)
-- 두 테이블의 지정하는 컬럼 값이 일치하지 않는 행도 조인에 포함 시킴 (반드시 OUTER JOIN임을 명시)

SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);

-- LEFT (OUTER) JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     LEFT OUTER JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID); -- EMPLOYEE 기준

SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);


SELECT EMP_ID, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID(+); -- 맞춰줘야하는 쪽에 붙이기

-- RIGHT (OUTER) JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     RIGHT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);

SELECT EMP_ID, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE(+) = DEPT_ID;

-- 다중 조인 : N개의 테이블을 조회할 때 사용 (순서 중요!!)
-- 사번, 사원 명, 부서코드, 부서 명, 지역 명 : EMPLOYEE(DEPT_CODE - DEPT_ID)DEPARTMENT(LOCAL_ID - LOCAL_CODE)LOCATION
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID
        AND LOCATION_ID = LOCAL_CODE;

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE LOCATION_ID = LOCAL_CODE
        AND DEPT_CODE = DEPT_ID;

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID);

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID);
     -- 에러 : EMPLOYEE와 LOCATION을 조인하려고 할 때 EMPLOYEE는 LOCATION_ID라는 컬럼이 없어서 조인 불가
    -- EMPLOYEE와 LOCATION은 JOIN할 게 없기 때문에 오류가 뜬다

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
     JOIN EMPLOYEE ON(DEPT_CODE = DEPT_ID);

-- 직급이 대리이면서 아시아 지역에 근무하는 직원 조회 EMPLOYEE, JOB, DEPARTMENT, LOCATION
-- 사번, 이름, 직급명, 부서명, 근무지역명, 급여 조회

-- 오라클
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME, SALARY
FROM EMPLOYEE E, JOB J, DEPARTMENT D, LOCATION L
WHERE DEPT_CODE = DEPT_ID
     AND E.JOB_CODE = J.JOB_CODE
     AND LOCATION_ID = LOCAL_CODE
     AND JOB_NAME = '대리'
     AND LOCAL_NAME LIKE 'ASIA%';


-- ANSI
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME, SALARY
FROM EMPLOYEE E
     JOIN JOB USING(JOB_CODE)
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
WHERE JOB_NAME = '대리'
      AND LOCAL_NAME LIKE 'ASIA%';


-- 셀프 조인
SELECT E.EMP_ID, E.EMP_NAME 사원이름, E.DEPT_CODE, E.MANAGER_ID,
	M.EMP_NAME 관리자이름
FROM EMPLOYEE E, EMPLOYEE M
WHERE E.MANAGER_ID = M.EMP_ID;

SELECT EMP_ID, MANAGER_ID
FROM EMPLOYEE;


